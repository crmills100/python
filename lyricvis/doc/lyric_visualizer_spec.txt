For each lyric phrase and time code, generate an image
Stich them together to music

Input:
	file with lyrics and timestamps
	song file

Assumptions: assume 1080p (1920x1080)

Repository:
    https://github.com/crmills100/python/tree/main/lyricvis
	


Creating a Video:
	- Download song + lyrics
	- Create quick video to check copyright on Youtube
	- Create timeline with lyrics
	- Generate



Resources:

1. Basic python to make a video with images
https://www.stackbuilders.com/blog/python-video-generation/ - complete
https://github.com/stackbuilders/blog-code/tree/main/python/python-video-generation/code

2. Another moviepy tutorial:

https://www.section.io/engineering-education/video-editing-python-moviepy/

3. Images to video (includes a moviepy example):

https://stackoverflow.com/questions/44947505/how-to-make-a-movie-out-of-images-in-python

4. Images to video (moviepy):
https://stackoverflow.com/questions/44732602/convert-image-sequence-to-video-using-moviepy

5. Running Stable Diffusion locally:
https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Command-Line-Arguments-and-Settings


Songs to Test With:
===================

Everlast - What it's Like
https://www.youtube.com/watch?v=qA1nGPM9yHA


Lil Wayne - Got Money ft. T-Pain
https://www.youtube.com/watch?v=1ohYsK5Y8Dc


Tiesto - Lay Low
https://www.youtube.com/watch?v=8PgDeK4x_Xw


Tiesto - Both
https://www.youtube.com/watch?v=zR5GPNpE6hU

We Own It - 2 Chains & Wiz Khalifa

Fast Lane - Bad Meets Evil ft. Eminem, Royce Da 5'9



To Explore:
===========

Music visualization spectrogram:
https://www.youtube.com/watch?v=nEkgooOsnAY

Pulsing Song:
https://www.youtube.com/watch?v=8PgDeK4x_Xw


Running:
========

Start image generator on Cayman:
	C:\opt\sd.webui> .\run.bat

	Configuration in webui/webui-user.bat (IP address)
		Noteable options: 
			set COMMANDLINE_ARGS=--lowram --api --server-name=192.168.1.13
			set CUDA_VISIBLE_DEVICES=0

	Configuration options in webui/modules/cmd_args.py

Generate a video for a song on localhost:
	Start the virtualenv:
		C:\Users\cmills\code\python\lyricvis> pipenv shell
	Run the generator:
		C:\Users\cmills\code\python\lyricvis> python .\create_image_sequence.py
	





Prototype I: - complete
        create a text image a given lyric
	api: create_image(w, h, prompt, path?) -> returns an image or writes to disk 

Prototype II: - complete
	Option A:
		create a blank video of 5mins long
		parse the timestamps and lyrics
		see how to insert the lyrics into the video
		save the video

	alternate... - choose this:
	
	Option B:
	
		parse the timestamps and lyrics		
		create an image for each frame of video, with lyrics as required (initally start with 2 seconds per word or next lyric, which ever comes first)
		create video from images

		https://pythonexamples.org/python-opencv-cv2-create-video-from-images/


Prototype III: - complete
	for each lyric: create a GAI (Generative AI) image based on lyric
	stitch together video from images

	III.1: - complete
		make a call to stable diffusion (SD) with a prompt 
				https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/API
				http://192.168.1.10:7860/docs
		write the image file to disk at a path
		
	III.2: - complete
		overlay text on top of stable diffusion (SD) image

	III.3: - complete
		update video generator to use SD images

Prototype IV: - complete
	add sound to generated video

Prototype V: - complete
	add title credits - complete
	add logo
		composite an image with an image with transparency - complete
	add end credits - complete
	add title graphic - N frames at beginning - complete

Prototype VI: - complete
	code cleanup
	unittesting

Prototype VII: - complete
    text mode

Prototype VIII:
	create 3 videos

Publish Prototype: - complete
	Publish single video to youtube

Contest:
	1. Promo Video 
		- storyboard: select 5 sonds (3 choosen)
		- subclip ~10 sec of audio from each
		- concatenate
		- add lyrics
		- create video
	2. Create social media post (use AI to generate text)
	3. Contest submission
	4. Cleanup/edits to github Repository
	5. Publish full songs

Additional features / TODO:
    - Color mapping (example only red + white for xmas)
	- Additonal hints for image lyric that is not displayed on the screen but used for AI image generation
	- Sub-second (per frame) resolution
	- Parameters into a file / program arguments
		


	


